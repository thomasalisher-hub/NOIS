# handlers/users.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()


# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –º–∏–¥–ª–≤–∞—Ä—å
class UserHandlers:
    def __init__(self, db, chat_manager):
        self.db = db
        self.chat_manager = chat_manager

    async def start_handler(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_id = message.from_user.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = await self.db.get_user(user_id)

        if user:
            welcome_text = f"""
üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user['nickname']}!

–¢–≤–æ–π —Ü–≤–µ—Ç: #{user['color_hex']}
–¢–≤–æ–π ID: {user_id}

–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
            """
            await message.answer(welcome_text)
        else:
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            from utils.nick_generator import NickGenerator
            from utils.avatars import AvatarGenerator

            nick_generator = NickGenerator()
            nickname = nick_generator.generate_random()

            avatar_generator = AvatarGenerator()
            color_hex = avatar_generator.generate_color_from_nick(nickname)

            await self.db.create_user(user_id, nickname, color_hex)

            welcome_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NOIS!

–¢–≤–æ–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å:
üë§ –ù–∏–∫–Ω–µ–π–º: {nickname}
üé® –¶–≤–µ—Ç: #{color_hex}

–¢—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. 
–î–ª—è —Å–º–µ–Ω—ã –Ω–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π /nick –∏–ª–∏ /random_nick

–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
            """

            keyboard = InlineKeyboardBuilder()
            keyboard.button(text="üîÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –Ω–∏–∫", callback_data="random_nick")
            keyboard.button(text="üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É", callback_data="generate_avatar")

            await message.answer(welcome_text, reply_markup=keyboard.as_markup())

    async def profile_handler(self, message: Message):
        """–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è"""
        user_id = message.from_user.id
        user = await self.db.get_user(user_id)

        if not user:
            await message.answer("‚ùå –¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /start")
            return

        profile_text = f"""
üìä –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å NOIS:

üë§ –ù–∏–∫–Ω–µ–π–º: {user['nickname']}
üé® –¶–≤–µ—Ç: #{user['color_hex']}
üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user['created_at'].strftime('%d.%m.%Y')}
üè† –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç: {await self.db.get_user_rooms_count(user_id)}

–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å:
/nick - —Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –≤—Ä—É—á–Ω—É—é
/random_nick - —Å–ª—É—á–∞–π–Ω—ã–π –Ω–∏–∫
/avatar - –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É
        """

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É
        from utils.avatars import AvatarGenerator
        avatar_generator = AvatarGenerator()
        avatar_path = await avatar_generator.generate_avatar(user['nickname'], user['color_hex'])

        with open(avatar_path, 'rb') as photo:
            await message.answer_photo(photo, caption=profile_text)

    async def nick_handler(self, message: Message):
        """–°–º–µ–Ω–∞ –Ω–∏–∫–∞ –≤—Ä—É—á–Ω—É—é"""
        user_id = message.from_user.id
        user = await self.db.get_user(user_id)

        if not user:
            await message.answer("‚ùå –¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /start")
            return

        args = message.text.split()
        if len(args) < 2:
            await message.answer("‚ùå –£–∫–∞–∂–∏ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º: /nick –ù–æ–≤—ã–π–ù–∏–∫")
            return

        new_nick = args[1].strip()

        # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∏–∫–∞
        if len(new_nick) < 2 or len(new_nick) > 32:
            await message.answer("‚ùå –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 2 –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤")
            return

        if not all(c.isalnum() or c in ['-', '_'] for c in new_nick):
            await message.answer("‚ùå –ù–∏–∫–Ω–µ–π–º –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –¥–µ—Ñ–∏—Å—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∏–∫–∞
        existing_user = await self.db.get_user_by_nickname(new_nick)
        if existing_user and existing_user['user_id'] != user_id:
            await message.answer("‚ùå –≠—Ç–æ—Ç –Ω–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∏–∫
        await self.db.update_user_nickname(user_id, new_nick)
        await message.answer(f"‚úÖ –ù–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_nick}")

    async def random_nick_handler(self, message: Message):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∏–∫–∞"""
        user_id = message.from_user.id
        user = await self.db.get_user(user_id)

        if not user:
            await message.answer("‚ùå –¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /start")
            return

        from utils.nick_generator import NickGenerator
        nick_generator = NickGenerator()
        new_nick = nick_generator.generate_random()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        while await self.db.get_user_by_nickname(new_nick):
            new_nick = nick_generator.generate_random()

        await self.db.update_user_nickname(user_id, new_nick)
        await message.answer(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –Ω–∏–∫: {new_nick}")

    async def help_handler(self, message: Message):
        """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
        help_text = """
üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã NOIS:

üë§ –ü—Ä–æ—Ñ–∏–ª—å:
/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
/profile - –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è
/nick - –°–º–µ–Ω–∞ –Ω–∏–∫–∞
/random_nick - –°–ª—É—á–∞–π–Ω—ã–π –Ω–∏–∫
/nick_options - –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∏–∫–∏
/avatar - –ê–≤–∞—Ç–∞—Ä–∫–∞

üè† –ö–æ–º–Ω–∞—Ç—ã:
/rooms - –°–ø–∏—Å–æ–∫ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç
/myrooms - –ú–æ–∏ –∫–æ–º–Ω–∞—Ç—ã
/create - –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É
/join - –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ
/leave - –ü–æ–∫–∏–Ω—É—Ç—å –∫–æ–º–Ω–∞—Ç—É

üí¨ –°–æ–æ–±—â–µ–Ω–∏—è:
/chat - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–Ω–∞—Ç—É
/history - –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π

‚ùì –ü–æ–º–æ—â—å:
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
        """

        await message.answer(help_text)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def setup_user_handlers(router, db, chat_manager):
    handlers = UserHandlers(db, chat_manager)

    router.message.register(handlers.start_handler, Command("start"))
    router.message.register(handlers.profile_handler, Command("profile"))
    router.message.register(handlers.nick_handler, Command("nick"))
    router.message.register(handlers.random_nick_handler, Command("random_nick"))
    router.message.register(handlers.help_handler, Command("help"))