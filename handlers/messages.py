# handlers/messages.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandObject, Command
from db.models import db
from services.chat_manager import ChatManager
import logging

logger = logging.getLogger(__name__)

# –°–û–ó–î–ê–ï–ú –†–û–£–¢–ï–† - –¥–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É —Å—Ç—Ä–æ–∫—É
dp = Router()

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —á–∞—Ç–æ–≤ (–±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ)
chat_manager = None


def setup_chat_manager(bot):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä —á–∞—Ç–æ–≤"""
    global chat_manager
    chat_manager = ChatManager(bot)


@dp.message(Command("chat"))
async def cmd_chat(message: Message, command: CommandObject = None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç—É"""
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user = await db.get_user(user_id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã: /chat <room_id> <—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è>
    if not command or not command.args:
        await message.answer("""
üí¨ <b>–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç—É</b>

–ò—Å–ø–æ–ª—å–∑—É–π:
<code>/chat ID_–∫–æ–º–Ω–∞—Ç—ã –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è</code>

–ü—Ä–∏–º–µ—Ä:
<code>/chat 123 –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!</code>
<code>/chat 456 –ö–∞–∫ –¥–µ–ª–∞?</code>

üí° –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ: /join ID
üìã –°–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –∫–æ–º–Ω–∞—Ç: /myrooms
        """)
        return

    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    args = command.args.split(maxsplit=1)
    if len(args) < 2:
        await message.answer("‚ùå –£–∫–∞–∂–∏ ID –∫–æ–º–Ω–∞—Ç—ã –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
        return

    try:
        room_id = int(args[0])
        message_text = args[1].strip()
    except ValueError:
        await message.answer("‚ùå ID –∫–æ–º–Ω–∞—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–Ω–∞—Ç–µ
    if not await db.is_user_in_room(user_id, room_id):
        await message.answer("‚ùå –¢—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π /join")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ
    room = await db.get_room(room_id)
    if not room or not room.get('telegram_chat_id'):
        await message.answer("‚ùå –ß–∞—Ç –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Å—å –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∫–æ–º–Ω–∞—Ç—ã.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
    if len(message_text) > 1000:
        await message.answer("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤)")
        return

    if len(message_text) < 1:
        await message.answer("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∫–æ–º–Ω–∞—Ç—ã
    try:
        telegram_message_id = await chat_manager.send_message_to_room(
            chat_id=room['telegram_chat_id'],
            user_nickname=user['nickname'],
            user_color=user['color_hex'],
            message_text=message_text
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑–µ
        await db.create_message(
            room_id=room_id,
            user_id=user_id,
            telegram_message_id=telegram_message_id,
            message_text=message_text,
            user_nickname=user['nickname'],
            user_color_hex=user['color_hex']
        )

        await message.answer(f"""
‚úÖ <b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</b>

üè† –ö–æ–º–Ω–∞—Ç–∞: <b>{room['name']}</b>
üí¨ –¢–µ–∫—Å—Ç: {message_text}

üì® –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç –∫–æ–º–Ω–∞—Ç—ã.
        """)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@dp.message(Command("history"))
async def cmd_history(message: Message, command: CommandObject = None):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ–º–Ω–∞—Ç—ã"""
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user = await db.get_user(user_id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return

    # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–Ω–∞—Ç—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    if not command or not command.args:
        await message.answer("""
üìú <b>–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ–º–Ω–∞—Ç—ã</b>

–ò—Å–ø–æ–ª—å–∑—É–π:
<code>/history ID_–∫–æ–º–Ω–∞—Ç—ã</code>

–ü—Ä–∏–º–µ—Ä:
<code>/history 123</code>

üí° –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: <code>/history</code> –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã
        """)
        return

    try:
        room_id = int(command.args)
    except ValueError:
        await message.answer("‚ùå ID –∫–æ–º–Ω–∞—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–Ω–∞—Ç–µ
    if not await db.is_user_in_room(user_id, room_id):
        await message.answer("‚ùå –¢—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
    messages = await db.get_room_messages(room_id, limit=20)

    if not messages:
        await message.answer("""
üìú <b>–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π</b>

–í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π.

üí° –ù–∞–ø–∏—à–∏ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
<code>/chat {room_id} –¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</code>
        """.format(room_id=room_id))
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏
    room = await db.get_room(room_id)
    history_text = f"üìú <b>–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {room['name']}</b>\n\n"

    for msg in messages:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
        time_str = msg['created_at'].strftime('%H:%M')

        history_text += f"<b><font color='{msg['user_color_hex']}'>{msg['user_nickname']}</font></b> ({time_str}):\n"
        history_text += f"{msg['message_text']}\n\n"

    history_text += f"üí° –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}\n"
    history_text += f"üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: <code>/chat {room_id} —Ç–µ–∫—Å—Ç</code>"

    await message.answer(history_text)


@dp.message(F.text)
async def handle_text_messages(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ –∫–æ–º–∞–Ω–¥—ã)"""
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å /
    if not message.text.startswith('/'):
        await message.answer("""
üí° <b>–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º:</b>

üè† <b>–ö–æ–º–Ω–∞—Ç—ã:</b>
/create –ù–∞–∑–≤–∞–Ω–∏–µ - –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É
/join ID - –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ
/rooms - –°–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç
/myrooms - –ú–æ–∏ –∫–æ–º–Ω–∞—Ç—ã

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏—è:</b>
/chat ID —Ç–µ–∫—Å—Ç - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
/history ID - –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π

üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å:</b>
/profile - –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/avatar - –ù–æ–≤–∞—è –∞–≤–∞—Ç–∞—Ä–∫–∞
/nick –ù–æ–≤—ã–π–ù–∏–∫ - –°–º–µ–Ω–∏—Ç—å –Ω–∏–∫
/random_nick - –°–ª—É—á–∞–π–Ω—ã–π –Ω–∏–∫
/nick_options - –í–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∏–∫–æ–≤

‚ùì /help - –ü–æ–º–æ—â—å –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º
        """)